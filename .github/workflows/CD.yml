name: CD

on:
  release:
    types: [created]

jobs:
  build:
    name: ${{ matrix.MAXICONDA_NAME }}-${{ matrix.OS_NAME }}-${{ matrix.ARCH }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            ARCH: x86_64
            MAXICONDA_NAME: "maxiconda"
            OS_NAME: "Windows"

          # - os: macos-latest
          #   ARCH: x86_64
          #   MAXICONDA_NAME: "maxiconda"
          #   OS_NAME: "MacOSX"

          # - os: macos-latest
          #   ARCH: arm64
          #   MAXICONDA_NAME: "maxiconda"
          #   OS_NAME: "MacOSX"

          # - os: macos-latest
          #   ARCH: x86_64
          #   MAXICONDA_NAME: "maxiconda-pypy"
          #   OS_NAME: "MacOSX"

          # - os: macos-latest
          #   ARCH: arm64
          #   MAXICONDA_NAME: "maxiconda-pypy"
          #   OS_NAME: "MacOSX"

          # - os: ubuntu-latest
          #   ARCH: aarch64
          #   DOCKER_ARCH: arm64v8
          #   DOCKERIMAGE: condaforge/linux-anvil-aarch64
          #   MAXICONDA_NAME: "maxiconda"
          #   OS_NAME: "Linux"

          - os: ubuntu-latest
            ARCH: x86_64
            DOCKER_ARCH: amd64
            DOCKERIMAGE: condaforge/linux-anvil-comp7
            MAXICONDA_NAME: "maxiconda"
            OS_NAME: "Linux"

          # - os: ubuntu-latest
          #   ARCH: ppc64le
          #   DOCKER_ARCH: ppc64le
          #   DOCKERIMAGE: condaforge/linux-anvil-ppc64le
          #   MAXICONDA_NAME: "maxiconda"
          #   OS_NAME: "Linux"

          # - os: ubuntu-latest
          #   ARCH: aarch64
          #   DOCKER_ARCH: arm64v8
          #   DOCKERIMAGE: condaforge/linux-anvil-aarch64
          #   MAXICONDA_NAME: "maxiconda-pypy"
          #   OS_NAME: "Linux"

          # - os: ubuntu-latest
          #   ARCH: x86_64
          #   DOCKER_ARCH: amd64
          #   DOCKERIMAGE: condaforge/linux-anvil-comp7
          #   MAXICONDA_NAME: "maxiconda-pypy"
          #   OS_NAME: "Linux"

          # - os: ubuntu-latest
          #   ARCH: ppc64le
          #   DOCKER_ARCH: ppc64le
          #   DOCKERIMAGE: condaforge/linux-anvil-ppc64le
          #   MAXICONDA_NAME: "maxiconda-pypy"
          #   OS_NAME: "Linux"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Windows-only setup
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
      if: contains(matrix.OS_NAME, 'Windows')

    - name: Build and test maxiconda
      env:
        ARCH: ${{ matrix.ARCH }}
        MAXICONDA_NAME: ${{ matrix.MAXICONDA_NAME }}
        OS_NAME: ${{ matrix.OS_NAME }}
        DOCKERIMAGE: ${{ matrix.DOCKERIMAGE }}
        DOCKER_ARCH: ${{ matrix.DOCKER_ARCH }}
      run: |
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          export MAXICONDA_VERSION=${GITHUB_REF##*/};
        fi
        if [[ "$OS_NAME" == "Linux" ]]; then
          bash build_maxiconda_linux.sh;
          EXT=sh
        fi
        if [[ "$OS_NAME" == "MacOSX" ]]; then
          bash build_maxiconda_macos.sh;
          EXT=sh
        fi
        if [[ "$OS_NAME" == "Windows" ]]; then
          source /c/Miniconda3/Scripts/activate;
          source build_maxiconda_windows.sh;
          cp build/$MINIFORGE_NAME-*-$OS_NAME-$ARCH.$EXT build/$MINIFORGE_NAME-$OS_NAME-$ARCH.$EXT
          EXT=exe
        fi
      shell: bash

    - name: Upload release assets
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["build/maxiconda*"]'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Add maxiconda proxy for Linux/MacOS
      run: |
        mkdir build
        cp maxiconda.sh build/

    - name: Upload release assets
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["build/maxiconda*"]'
